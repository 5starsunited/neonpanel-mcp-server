openapi: 3.0.3
info:
  title: NeonPanel GPT API
  version: 1.0.1
  description: API to access companies, warehouses, inventory, reports, and document import (PDF/JSON)
  contact:
    name: Yurii Mazur
    email: yurii.mazur@neonpanel.com
servers:
  - url: https://my.neonpanel.com

tags:
  - name: Companies
    description: Operations for companies and related resources
  - name: Reports
    description: Retrieve available reports and their metadata
  - name: Analytics
    description: Revenue & COGS summaries
  - name: Inventory
    description: Inventory, COGS, and Landed Costs
  - name: Import
    description: Import instructions, file upload, and status checks

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: |
        OAuth 2.0 Authorization Code. `tokenUrl` retrieves standard **POST**
        request with `grant_type=authorization_code` and `refresh_token` for refreshing.
      flows:
        authorizationCode:
          authorizationUrl: https://my.neonpanel.com/oauth2/authorize
          tokenUrl: https://my.neonpanel.com/oauth2/token
          scopes:
            openid: Basic authentication scope

  schemas:
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          minimum: 1
          maximum: 60
          default: 30
        last_page:
          type: integer
          example: 1

    Document:
      type: object
      properties:
        type:
          type: string
          example: Invoice
        link:
          type: string
          format: uri
          example: https://example.com/path/to/resource
        status:
          type: string
          example: Completed
        completed:
          type: string
          format: date-time
          example: 2024-01-01T15:30:00Z
          nullable: true
        ref_number:
          type: string
          example: REF12345
          description: Reference number for COGS or Landed Costs related documents
          nullable: true
        date:
          type: string
          format: date
          example: 2024-01-01
          description: Date for COGS or Landed Costs related documents
          nullable: true

    Warehouse:
      type: object
      properties:
        uuid:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0
        name:
          type: string
          example: Warehouse Name
        type:
          type: string
          example: Asset
          nullable: true
        country_code:
          type: string
          example: US
          nullable: true

    CogsDetailItem:
      type: object
      description: Inventory batches and documents that created costs
      properties:
        type:
          type: string
          example: Purchase Price
        batch:
          $ref: '#/components/schemas/Document'
          description: The batch document from which the inventory was written off
        document:
          $ref: '#/components/schemas/Document'
          description: The document that made costs
        currency:
          type: string
          example: USD
        amount:
          type: number
          example: 100.5
        quantity:
          type: integer
          example: 50

    CogsItem:
      type: object
      description: Sales and their costs by documents
      properties:
        document:
          $ref: '#/components/schemas/Document'
          description: The document that made sales
        currency:
          type: string
          example: USD
        amount:
          type: number
          example: 100.5
        quantity:
          type: integer
          example: 50
        details:
          type: array
          items:
            $ref: '#/components/schemas/CogsDetailItem'

    CogsFilters:
      type: object
      properties:
        country_code:
          type: string
          example: US
        start_date:
          type: string
          format: date
          example: 2024-01-01
        end_date:
          type: string
          format: date
          example: 2024-01-01

    CogsResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            filters:
              $ref: '#/components/schemas/CogsFilters'
            company:
              $ref: '#/components/schemas/Company'
            inventory:
              $ref: '#/components/schemas/InventoryItem'
            currency:
              type: string
              example: USD
            amount:
              type: number
              example: 3675
            lost_amount:
              type: number
              example: 0
            total_amount:
              type: number
              example: 3675
            quantity:
              type: integer
              example: 2000
            details:
              type: array
              items:
                $ref: '#/components/schemas/CogsItem'

    InventoryItem:
      type: object
      properties:
        id:
          type: integer
          example: 1001
        name:
          type: string
          example: Product Name
        fnsku:
          type: string
          example: FNSKU12345
        asin:
          type: string
          example: ASIN12345
        sku:
          type: string
          example: SKU12345
        image:
          type: string
          format: uri
          example: https://example.com/path/to/image
          nullable: true
        country_code:
          type: string
          example: US
        weight:
          type: number
          example: 80.5
          description: Weight of product in pounds
        length:
          type: number
          example: 80.5
          description: Length of product in inches
        height:
          type: number
          example: 80.5
          description: Height of product in inches
        depth:
          type: number
          example: 80.5
          description: Depth of product in inches

    InventoryFilters:
      type: object
      properties:
        country_code:
          type: string
          example: US
        search:
          type: string
          example: SKU12345
        fnsku:
          type: string
          example: FNSKU12345
        asin:
          type: string
          example: ASIN12345
        sku:
          type: string
          example: SKU12345

    WarehouseListResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Warehouse'

    WarehouseBalancesListResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            balances_date:
              type: string
              format: date
              example: 2024-01-01
            data:
              type: array
              items:
                type: object
                properties:
                  inventory:
                    $ref: '#/components/schemas/InventoryItem'
                  balance:
                    type: number
                    example: 0

    InventoryListResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            filters:
              $ref: '#/components/schemas/InventoryFilters'
            data:
              type: array
              items:
                $ref: '#/components/schemas/InventoryItem'

    InventoryDetailsResponse:
      type: object
      properties:
        inventory:
          $ref: '#/components/schemas/InventoryItem'
        restock_data:
          type: object
          properties:
            daily_sales_target:
              type: number
            unit_vendor_price:
              type: number
            unit_landed_cost:
              type: number
            estimated_daily_sales:
              type: number
            estimated_price:
              type: number
            lead_time_days:
              type: number
            safety_stock_days:
              type: number
            fba_lead_time_days:
              type: number
            fba_safety_stock_days:
              type: number
            target_fba_fee:
              type: number
            target_price:
              type: number
            target_referral_percentage:
              type: number
            daily_unit_sales_target:
              type: number
        balances_data:
          type: object
          properties:
            balances_date:
              type: string
              format: date
            balances_list:
              type: array
              items:
                type: object
                properties:
                  warehouse:
                    $ref: '#/components/schemas/Warehouse'
                  balance:
                    type: number

    Company:
      type: object
      properties:
        uuid:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0
        name:
          type: string
          example: Company Name
        currency:
          type: string
          example: USD
        timezone:
          type: string
          example: America/New_York

    CompanyListResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Company'

    CostDetail:
      type: object
      description: Batch costs details, its types and documents that created this costs
      properties:
        type:
          type: string
          example: Purchase Price
        document:
          $ref: '#/components/schemas/Document'
          description: The document that made costs
        currency:
          type: string
          example: USD
        amount:
          type: number
          example: 100.5
        quantity:
          type: integer
          example: 50

    CostItem:
      type: object
      description: Batches of inventory, each batch usually gets slightly different item cost
      properties:
        batch:
          $ref: '#/components/schemas/Document'
        currency:
          type: string
          example: USD
        amount:
          type: number
          example: 100.5
        quantity:
          type: integer
          example: 50
        details:
          type: array
          items:
            $ref: '#/components/schemas/CostDetail'

    LandedCostFilters:
      type: object
      properties:
        country_code:
          type: string
          example: US
        warehouse_uuid:
          type: string
        start_date:
          type: string
          format: date
          example: 2024-01-01
        end_date:
          type: string
          format: date
          example: 2024-01-01

    LandedCostResponse:
      allOf:
        - $ref: '#/components/schemas/Pagination'
        - type: object
          properties:
            filters:
              $ref: '#/components/schemas/LandedCostFilters'
            company:
              $ref: '#/components/schemas/Company'
            inventory:
              $ref: '#/components/schemas/InventoryItem'
            warehouse:
              $ref: '#/components/schemas/Warehouse'
            currency:
              type: string
              example: USD
            amount:
              type: number
              example: 100.5
            quantity:
              type: integer
              example: 50
            data:
              type: array
              items:
                $ref: '#/components/schemas/CostItem'

    ReportItem:
      type: object
      properties:
        title:
          type: string
          description: Name of Report
        group:
          type: string
          description: Title of Report's Group
        description:
          type: string
        query_filters:
          type: array
          description: Filters you can set in Report URL as query parameter
          items:
            type: string
            example: StartDate
        link:
          type: string
          format: uri
          example: https://example.com/path/to/resource

    ReportsListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 10
          description: Count of Reports available and accessible
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'

    RevenueAndCogsFilters:
      type: object
      properties:
        company_uuids:
          type: array
          items:
            type: string
        country_codes:
          type: array
          items:
            type: string
            example: US
        periodicity:
          type: string
          example: yearly
        grouping:
          type: array
          items:
            type: string
        start_date:
          type: string
          format: date
          example: 2024-01-01
        end_date:
          type: string
          format: date
          example: 2024-01-01

    RevenueAndCogsItem:
      type: object
      properties:
        start_date:
          type: string
          format: date
          example: 2024-01-01
        end_date:
          type: string
          format: date
          example: 2024-01-01
        revenue_amount:
          type: number
          description: Amount of Inventories sold
        cogs_amount:
          type: number
          description: Cost of Inventories sold
        currency:
          type: string
          description: Currency of amounts provided
        company:
          $ref: '#/components/schemas/Company'
          nullable: true
          description: Company data if in grouping parameter company was provided
        country_code:
          type: string
          example: US
          nullable: true
          description: Country code if in grouping parameter country was provided
        invoice:
          $ref: '#/components/schemas/Document'
          nullable: true
          description: Invoice data if in grouping parameter invoice was provided

    RevenueAndCogsResponse:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/RevenueAndCogsFilters'
        data:
          type: array
          items:
            $ref: '#/components/schemas/RevenueAndCogsItem'

    ImportStatus:
      type: string
      description: Status of import
      enum: [queued, processing, done, error]

    ImportType:
      type: string
      description: >
        Lowercase import type. Currently only **bill** is supported.
      enum: [bill]

paths:
  /api/v1/companies:
    get:
      tags: [Companies]
      operationId: listCompanies
      x-openai-isConsequential: false
      summary: Retrieve list of Companies
      description: Returns paginated list of available for user companies
      security:
        - OAuth2: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
      responses:
        '200':
          description: List of companies retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListResponse'

  /api/v1/reports:
    get:
      tags: [Reports]
      operationId: listReports
      x-openai-isConsequential: false
      summary: Retrieve list of accessible Reports with their URLs
      description: Returns list of reports with groups, descriptions and direct links
      security:
        - OAuth2: []
      responses:
        '200':
          description: List of reports retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsListResponse'

  /api/v1/revenue-and-cogs:
    get:
      tags: [Analytics]
      operationId: revenueAndCogsSummary
      x-openai-isConsequential: false
      summary: Retrieve volume of Revenue and Cost of Goods Sold (COGS) by specified period and grouping type
      description: Returns total values of Sales and COGS by specified periodicity and grouping
      security:
        - OAuth2: []
      parameters:
        - name: company_uuids
          in: query
          description: Filter by Companies. Defaults to all accessible for user companies
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              description: The UUID of the company
        - name: country_codes
          in: query
          description: Filter by countries. Defaults to all accessible for company marketplaces
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              description: The country ISO code
        - name: grouping
          in: query
          description: Type of grouping of results. If not provided, company grouping will be set
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum: [company, country, invoice]
        - name: periodicity
          in: query
          description: Chunking results by time periods
          schema:
            type: string
            enum: [total, yearly, quarterly, monthly]
            default: total
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
            example: 2024-01-01
        - name: end_date
          in: query
          schema:
            type: string
            format: date
            example: 2024-12-31
          description: Defaults to current date if not provided
      responses:
        '200':
          description: Sales and COGS summary data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueAndCogsResponse'

  /api/v1/companies/{companyUuid}/warehouses:
    get:
      tags: [Companies, Inventory]
      operationId: listWarehouses
      x-openai-isConsequential: false
      summary: Retrieve warehouses for a Company
      description: Returns paginated list of warehouses of specified company with search by name
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
        - name: search
          in: query
          schema:
            type: string
          description: Search by Warehouse name
      responses:
        '200':
          description: List of warehouses retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseListResponse'

  /api/v1/companies/{companyUuid}/warehouses/{warehouseUuid}/balances:
    get:
      tags: [Companies, Inventory]
      operationId: warehouseBalances
      x-openai-isConsequential: false
      summary: Retrieve Warehouse inventory balances
      description: Returns paginated list of warehouse inventory balances of specified warehouse
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: warehouseUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the warehouse
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
        - name: balances_date
          in: query
          schema:
            type: string
            format: date
            example: 2024-01-01
            nullable: true
          description: Set a date if you need a balances in a past. Defaults to current date if not provided
      responses:
        '200':
          description: List of warehouses retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseBalancesListResponse'

  /api/v1/companies/{companyUuid}/inventory-items:
    get:
      tags: [Companies, Inventory]
      operationId: listInventoryItems
      x-openai-isConsequential: false
      summary: Retrieve inventory items for a Company
      description: Returns paginated list of company inventory with filters and search
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
        - name: country_code
          in: query
          schema:
            type: string
            minLength: 2
            maxLength: 2
        - name: search
          in: query
          schema:
            type: string
            example: SKU12345
          description: Search by SKU, ASIN, FnSKU, ID or Name
        - name: fnsku
          in: query
          schema:
            type: string
            example: FNSKU12345
        - name: asin
          in: query
          schema:
            type: string
            example: ASIN12345
        - name: sku
          in: query
          schema:
            type: string
            example: SKU12345
      responses:
        '200':
          description: List of inventory items retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryListResponse'

  /api/v1/companies/{companyUuid}/inventory-items/{inventoryId}/details:
    get:
      tags: [Inventory]
      operationId: inventoryDetails
      x-openai-isConsequential: false
      summary: Retrieve restock information and warehouse balances for an Inventory Item
      description: Returns general information, restock information and detailed warehouse balances
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: inventoryId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the inventory item
        - name: balances_date
          in: query
          schema:
            type: string
            format: date
            example: 2024-01-01
            nullable: true
          description: Set a date if you need a balances information in a past. Defaults to current date if not provided
      responses:
        '200':
          description: Inventory Item data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryDetailsResponse'

  /api/v1/companies/{companyUuid}/inventory-items/{inventoryId}/landed-cost:
    get:
      tags: [Inventory]
      operationId: listInventoryLandedCosts
      x-openai-isConsequential: false
      summary: Retrieve Landed Costs (manufacturing expenses) for an Inventory Item
      description: Returns detailed manufacturing expenses (Landed Costs) for specified inventory by period and warehouse
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: inventoryId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the inventory item
        - name: warehouse_uuid
          in: query
          required: true
          schema:
            type: string
          description: The UUID of the warehouse
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
            example: 2024-01-01
        - name: end_date
          in: query
          schema:
            type: string
            format: date
            example: 2024-12-31
          description: Defaults to current date if not provided
      responses:
        '200':
          description: Landed costs data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandedCostResponse'

  /api/v1/companies/{companyUuid}/inventory-items/{inventoryId}/cogs:
    get:
      tags: [Inventory]
      operationId: listInventoryCogs
      x-openai-isConsequential: false
      summary: Retrieve Cost of Goods Sold (COGS) for an Inventory Item
      description: Returns detailed cost of goods sold (COGS) for inventory by period
      security:
        - OAuth2: []
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
          description: The UUID of the company
        - name: inventoryId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the inventory item
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 60
            default: 30
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
            example: 2024-01-01
        - name: end_date
          in: query
          schema:
            type: string
            format: date
            example: 2024-12-31
          description: Defaults to current date if not provided
      responses:
        '200':
          description: COGS data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CogsResponse'

  /api/v1/import/{type}/instructions:
    get:
      tags: [Import]
      operationId: getImportInstructions
      x-openai-isConsequential: false
      summary: Retrieve document upload instructions
      description: Returns a payload of parameters needed for document creation with descriptions
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImportType'
      responses:
        '200':
          description: Instructions by specified type found and provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  attributes:
                    type: object
                    description: Object with keys as parameter name and value as description
                  general:
                    type: string
                    description: General specifications and tips
            text/plain:
              schema:
                type: string
                description: Formatted instructions as plain text
        '404':
          description: Unsupported document type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
            text/plain:
              schema:
                type: string

  /api/v1/companies/{companyUuid}/create/{type}:
    post:
      tags: [Import]
      operationId: createDocuments
      x-openai-isConsequential: false
      summary: Upload documents payload
      description: Creates documents by JSON payload. Structure of data can be obtained by **getImportInstructions** operation
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the company.
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImportType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [data]
              properties:
                data:
                  type: object
                  description: Document parameters with line items included. Structure can be obtained by **getImportInstructions** operation
      responses:
        '200':
          description: Result is ready.
          headers:
            X-Request-Id:
              description: Echo of the generated request ID.
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/components/schemas/ImportStatus'
                  documents:
                    type: array
                    description: Documents created from the uploaded file.
                    items:
                      $ref: '#/components/schemas/Document'
        '400':
          description: Unsupported type or data is broken.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/companies/{companyUuid}/import/{type}/pdf:
    post:
      tags: [Import]
      operationId: createDocumentsByPdf
      x-openai-isConsequential: false
      summary: Upload a single PDF file as raw binary and create documents
      description: |
        Primary: send a raw PDF stream (`application/pdf`) with `filename` query parameter.
        Fallback: send JSON with a `file` object containing a short-lived download link.
        After a 202 response, WAIT the indicated seconds (or 15 if the header is absent), then call **checkImportProcessing**
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the company.
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImportType'
        - in: query
          name: filename
          description: Original filename to store alongside the uploaded PDF, required for application/pdf request
          schema:
            type: string
            example: file.pdf
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
          application/pdf:
            schema:
              type: string
              format: binary
          application/json:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: object
                  description: File reference for server-side download.
                  required: [name, link]
                  properties:
                    name:
                      type: string
                      description: Original filename.
                    link:
                      type: string
                      format: uri
                      description: Short-lived URL to GET the file.
      responses:
        '202':
          description: Accepted for processing. First status check should occur after 15 seconds.
          headers:
            Retry-After:
              description: Seconds to wait before the first status poll.
              schema:
                type: integer
                minimum: 1
                default: 15
            X-Request-Id:
              description: Request ID of created import.
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    format: uuid
                    description: Request ID of created import.
                  status:
                    $ref: '#/components/schemas/ImportStatus'
        '400':
          description: Unsupported type or file is broken.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '415':
          description: Unsupported Media Type (must be `application/pdf` or `application/json`).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/companies/{companyUuid}/import/{type}/status/{requestId}:
    get:
      tags: [Import]
      operationId: checkImportProcessing
      x-openai-isConsequential: false
      summary: Check status of import processing
      description: |
        Poll this endpoint using the `requestId` from the upload response.
        If processing isn't finished, returns `202 Accepted` with header `Retry-After` (default 5).
        GPT: when you receive 202, WAIT the indicated seconds (or 5 if the header is absent) and poll again.
      parameters:
        - name: companyUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the company.
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImportType'
        - name: requestId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Request ID of the previously created import.
      responses:
        '200':
          description: Result is ready.
          headers:
            X-Request-Id:
              description: Echo of the generated request ID.
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/components/schemas/ImportStatus'
                  documents:
                    type: array
                    description: Documents created from the uploaded file.
                    items:
                      $ref: '#/components/schemas/Document'
        '202':
          description: Not ready yet. Client should poll again after the suggested delay.
          headers:
            Retry-After:
              description: Seconds to wait before next poll (default 5).
              schema:
                type: integer
                minimum: 1
                default: 5
            X-Request-Id:
              description: Echo of the generated request ID.
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/components/schemas/ImportStatus'
