import { z } from 'zod';
import { KeepaClient } from './keepa-client';
export declare const ProductLookupSchema: any;
export declare const BatchProductLookupSchema: any;
export declare const DealSearchSchema: any;
export declare const SellerLookupSchema: any;
export declare const BestSellersSchema: any;
export declare const PriceHistorySchema: any;
export declare const ProductFinderSchema: any;
export declare const CategoryAnalysisSchema: any;
export declare const SalesVelocitySchema: any;
export declare const InventoryAnalysisSchema: any;
export declare const TokenStatusSchema: any;
export declare class KeepaTools {
    private client;
    constructor(client: KeepaClient);
    lookupProduct(params: z.infer<typeof ProductLookupSchema>): Promise<string>;
    batchLookupProducts(params: z.infer<typeof BatchProductLookupSchema>): Promise<string>;
    searchDeals(params: z.infer<typeof DealSearchSchema>): Promise<string>;
    lookupSeller(params: z.infer<typeof SellerLookupSchema>): Promise<string>;
    getBestSellers(params: z.infer<typeof BestSellersSchema>): Promise<string>;
    getPriceHistory(params: z.infer<typeof PriceHistorySchema>): Promise<string>;
    findProducts(params: z.infer<typeof ProductFinderSchema>): Promise<string>;
    analyzeCategory(params: z.infer<typeof CategoryAnalysisSchema>): Promise<string>;
    private getCategoryOverview;
    private getTopPerformers;
    private getOpportunities;
    private getTrends;
    private generateRecommendations;
    analyzeSalesVelocity(params: z.infer<typeof SalesVelocitySchema>): Promise<string>;
    private getRealSalesVelocityData;
    analyzeInventory(params: z.infer<typeof InventoryAnalysisSchema>): Promise<string>;
    private getRealInventoryAnalysis;
    private sortVelocityData;
    private getVelocityIndicator;
    private getRiskEmoji;
    private formatInventoryOverview;
    private formatFastMovers;
    private formatSlowMovers;
    private formatStockoutRisks;
    private formatSeasonalAnalysis;
    private generateInventoryRecommendations;
    getTokenStatus(params: z.infer<typeof TokenStatusSchema>): Promise<string>;
}
